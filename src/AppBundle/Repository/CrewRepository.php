<?php

namespace AppBundle\Repository;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Persistence\ManagerRegistry;
use AppBundle\Entity\Crew;
use AppBundle\Entity\Ship;

/**
 * CrewRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CrewRepository extends ServiceEntityRepository//\Doctrine\ORM\EntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Crew::class, Ship::class);
    }

    // This will return a QueryBuilder instance
    public function qbAll()
    {
        return $this->createQueryBuilder("c");
    }

    public function restrictedInformationCrew(?array $collumns = ['id'], ?int $limit = 10, ?int $offset = 0, ?bool $count = false): array
    {
        $table    = $this->getClassMetadata()->table["name"];

        if ($count) {
            $select = 'COUNT(id) as count';
            $limit  = '';
        }
        else {
            $collumns = (!is_array($collumns) || empty($collumns) ? ['id'] : $collumns);
            $select   = implode(', ', $collumns);
            $limit    = ' LIMIT '. $offset .', '. $limit;
        }

        $sql =  'SELECT '. $select .' FROM '. $table . $limit;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        return $stmt->fetchAll();
    }

    public function restrictedInformationCrewForShip(?int $shipId = null, ?array $collumns = ['id'], ?int $limit = 10, ?int $offset = 0, ?bool $count = false): array
    {
        $table    = $this->getClassMetadata()->table["name"];

        if ($count) {
            $select = 'COUNT(id) as count';
            $limit  = '';
        }
        else {
            $collumns = (!is_array($collumns) || empty($collumns) ? ['id'] : $collumns);
            $select   = implode(', ', $collumns);
            $limit    = ' LIMIT '. $offset .', '. $limit;
        }

        $shipId   = ($shipId) ? ' = '. $shipId : ' IS NULL';

        $sql =  'SELECT '. $select .' FROM '. $table .' WHERE ship_id'. $shipId . $limit;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        return $stmt->fetchAll();
    }

    public function restrictedInformationShipCrew(int $shipId, ?array $collumns = ['id'], ?int $limit = 10, ?int $offset = 0, ?bool $count = false): array
    {
        $shipMetas           = $this->getEntityManager()->getClassMetadata(Ship::class);
        $shipTableName       = $shipMetas->table["name"];
        $table               = $this->getClassMetadata()->table["name"];

        if ($count) {
            $select = 'COUNT(c.id) as count';
            $limit  = '';
        }
        else {
            $collumns = (!is_array($collumns) || empty($collumns) ? ['id'] : $collumns);
            array_walk($collumns, function(&$value) {
                $value = 'c.'.$value;
            });
            $select   = implode(', ', $collumns);
            $limit    = ' LIMIT '. $offset .', '. $limit;
        }

        $sql =  'SELECT '. $select .' FROM '. $table .' c JOIN '. $shipTableName. ' s ON (c.ship_id = s.id AND s.id = :ship_id) ' .$limit;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute([':ship_id' => $shipId]);

        return $stmt->fetchAll();
    }

    public function restrictedInformationCrewMember(int $id, ?array $collumns = ['id']): ?array
    {
        $collumns = (!is_array($collumns) || empty($collumns) ? ['id'] : $collumns);
        $table    = $this->getClassMetadata()->table["name"];

        $sql =  'SELECT '. implode(', ', $collumns) .' FROM '. $table .' WHERE id = :id';

        $stmt   = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute([':id' => $id]);
        $result = $stmt->fetch();
        $result = is_array($result) ? $result : null;

        return $result;
    }
}
