<?php

namespace AppBundle\Repository;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Persistence\ManagerRegistry;
use AppBundle\Entity\Job;
use AppBundle\Entity\Harbor;

/**
 * JobRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JobRepository extends ServiceEntityRepository//\Doctrine\ORM\EntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Job::class, Harbor::class);
    }

    public function restrictedInformationJobs(?array $collumns = ['id'], ?int $limit = 10, ?int $offset = 0, ?bool $count = false): array
    {
        $table    = $this->getClassMetadata()->table["name"];

        if ($count) {
            $select = 'COUNT(id) as count';
            $limit  = '';
        }
        else {
            $collumns = (!is_array($collumns) || empty($collumns) ? ['id'] : $collumns);
            $select   = implode(', ', $collumns);
            $limit    = ' LIMIT '. $offset .', '. $limit;
        }

        $sql =  'SELECT '. $select .' FROM '. $table . $limit;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();

        return $stmt->fetchAll();
    }

    public function restrictedInformationHarborJobs(int $harborId, ?array $collumns = ['id'], ?int $limit = 10, ?int $offset = 0, ?bool $count = false): array
    {
        $harborMetas         = $this->getEntityManager()->getClassMetadata(Harbor::class);
        $harborTableName     = $harborMetas->table["name"];
        $harborJobsTableName = $harborMetas->associationMappings['jobs']['joinTable']['name'];
        $table               = $this->getClassMetadata()->table["name"];

        if ($count) {
            $select = 'COUNT(j.id) as count';
            $limit  = '';
        }
        else {
            $collumns = (!is_array($collumns) || empty($collumns) ? ['id'] : $collumns);
            array_walk($collumns, function(&$value) {
                $value = 'j.'.$value;
            });
            $select   = implode(', ', $collumns);
            $limit    = ' LIMIT '. $offset .', '. $limit;
        }

        $sql = 'SELECT '. $select .' FROM '. $table .' j JOIN '. $harborJobsTableName. ' hj ON (j.id = hj.job_id AND hj.harbor_id = :harbor_id) ' .$limit;

        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute([':harbor_id' => $harborId]);

        return $stmt->fetchAll();
    }

    public function restrictedInformationJob(int $id, ?array $collumns = ['id']): ?array
    {
        $collumns = (!is_array($collumns) || empty($collumns) ? ['id'] : $collumns);
        $table    = $this->getClassMetadata()->table["name"];

        $sql =  'SELECT '. implode(', ', $collumns) .' FROM '. $table .' WHERE id = :id';

        $stmt   = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute([':id' => $id]);
        $result = $stmt->fetch();
        $result = is_array($result) ? $result : null;

        return $result;
    }
}
